@using Entidades.Modelos
@model IEnumerable<Entidades.Modelos.MatriculaTurma>

@section Stylesheets {
    <link rel="stylesheet" href="/css/grade_de_horarios.css" type="text/css" />
}

@{
    ViewData["Title"] = "Comprovante de Matrícula";

    List<string> bootStrapColors = new List<string>();
    bootStrapColors.Add("bg-sky");
    bootStrapColors.Add("bg-green");
    bootStrapColors.Add("bg-pink");
    bootStrapColors.Add("bg-yellow");
    bootStrapColors.Add("bg-orange");
    bootStrapColors.Add("bg-purple");
    bootStrapColors.Add("bg-lightred");
    bootStrapColors.Add("bg-warning");
    bootStrapColors.Add("bg-dark");
    bootStrapColors.Add("bg-info");
    bootStrapColors.Add("bg-primary");

    IDictionary<Disciplina, string> discColorMap = new Dictionary<Disciplina, string>();
    Model.ToList().ForEach(mt =>
        {
            if (!discColorMap.ContainsKey(mt.Turma.Disciplina))
            {
                discColorMap.Add(mt.Turma.Disciplina, bootStrapColors[discColorMap.Count % bootStrapColors.Count]);
            }
        });

    List<HorarioGrade> horarios = Model.SelectMany(mt => mt.Turma.Horarios).Distinct().ToList();
    List<string> periodos = horarios.Select(h => h.Periodo).Distinct().OrderBy(s => s).ToList();
}

<div class="container">
    <nav class="d-print-none" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Matriculas">Matrícula</a></li>
            <li class="breadcrumb-item"><a href="/Matriculas/GradeDeHorario">Grade de Horários</a></li>
            <li class="breadcrumb-item active" aria-current="page">Comprovante de Matrícula</li>
        </ol>
    </nav>
@if (Model.Any())
{
    <div>
        <div class="container" style="position: relative">
            <img style="position: absolute; right: 0" src="~/images/pucrsicon.png" width="60" height="70" alt="PUCRS" />
            <h1 class="mb-5 d-flex justify-content-center">Comprovante de Matrícula</h1>
        </div>
        <p><b>Aluno:</b> @Model.First().Estudante.Nome</p>
        <p><b>Matrícula: </b>@Model.First().Estudante.NumeroMatricula</p>
        <p><b>Curso:</b> @Model.First().Turma.Disciplina.Curriculos.First().NomeDoCurso </p>
        <p><b>Currículo:</b> @Model.First().Estudante.Curriculo.Codigo</p>
        <p><b>Semestre:</b> @Model.First().Turma.Semestre.Titulo</p>
        <p><b>Data do Comprovante: </b>@DateTime.Now</p>
        <h2 class="my-3 d-flex justify-content-center">Grade de Horários</h2>
    </div>
    <div>
        <table class="table table-bordered text-center">
            <thead>
                <tr class="bg-light-gray">
                    <th class="text-uppercase">
                        Horário
                    </th>
                    <th class="text-uppercase">SEG</th>
                    <th class="text-uppercase">TER</th>
                    <th class="text-uppercase">QUA</th>
                    <th class="text-uppercase">QUI</th>
                    <th class="text-uppercase">SEX</th>
                </tr>
            </thead>
            <tbody>
                @foreach (string periodo in periodos)
                {
                    var horario = horarios.Find(h => h.Periodo.Equals(periodo));
                    <tr>
                        <td class="align-middle">
                            <p class="bg-light-gray rounded">@horario.Horario.Substring(1)</p>
                            <span>@horario.HorarioInicial</span><br />
                            <span>@horario.HorarioFinal</span>
                        </td>
                        @for (int i = 2; i <= 6; i++)
                        {
                            @if (Model.Any(mt => mt.Turma.Horarios.Any(hg => hg.Horario.Equals($"{i}{horario.Periodo}"))))
                            {
                                var turma = Model.FirstOrDefault(mt => mt.Turma.Horarios.Any(hg => hg.Horario.Equals($"{i}{horario.Periodo}")));
                                <td style="width: 18%">
                                    <div class="@discColorMap.Where(dcm => dcm.Key.Equals(@turma.Turma.Disciplina)).First().Value padding-5px-tb padding-15px-lr border-radius-5 margin-10px-bottom text-white font-size16 xs-font-size13">
                                        <span>@turma.Turma.Disciplina.Nome</span>
                                    </div>
                                    <div class="font-size13 margin-10px-top">@turma.Turma.Disciplina.Codigo</div>
                                    <div class="font-size13 ">T.@turma.Turma.Id</div>
                                </td>
                            }
                            else
                            {
                                <td class="bg-light-gray" style="width: 18%"></td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div>
        <h2 class="my-3 align-self-center d-flex justify-content-center">Disciplinas</h2>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">Disciplina</th>
                    <th scope="col">Código</th>
                    <th scope="col">Turma</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var matricula in Model)
                {
                    <tr>
                        <td scope="row">@matricula.Turma.Disciplina.Nome</td>
                        <td scope="row">@matricula.Turma.Disciplina.Codigo</td>
                        <td scope="row">@matricula.Turma.Id</td>
                    </tr>
                }
            </tbody>
        </table>
        <div align="right" class="d-print-none">
            <button class="btn btn-primary" onclick="window.print();">Imprimir</button>
        </div>
    </div>
}
else
{
    <h4 class="text-light-gray text-center">
        Nenhuma matrícula realizada até o momento!
    </h4>
}
</div>
