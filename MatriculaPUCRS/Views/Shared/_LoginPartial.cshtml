@using Microsoft.AspNetCore.Identity
@using Persistencia.Interfaces.Repositorios
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IEstudanteRepositorio EstudanteRepositorio
@{
    string name = string.Empty;
    if (SignInManager.IsSignedIn(User))
    {
        long? userId = await UserManager.FindByEmailAsync(User.Identity.Name).ContinueWith(au => au.Result.EstudanteId);
        name = userId is null ? User.Identity.Name : await EstudanteRepositorio.GetEntityById((long) userId).ContinueWith(e => e.Result.Nome);
    }
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark btn btn-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@name</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Turmas", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-light text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
