@using Microsoft.AspNetCore.Identity
@using Entidades.Modelos
@inject SignInManager<ApplicationUser> SignInManager;
@model Entidades.Modelos.Curriculo

@{
    ViewData["Title"] = $"Curso - { Model.NomeParaLista }";
    var disciplinas = Model.Disciplinas.OrderBy(d => d.Nivel).ThenBy(d => d.Codigo);
    bool isCoordenador = SignInManager.IsSignedIn(User) && User.IsInRole("Coordenador");
}

<h1>@ViewData["Title"]</h1>

<h2>Disciplinas</h2>

@if (isCoordenador)
{
    <p>
        <a asp-action="Create">Adicionar</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameForInnerType((Disciplina d) => d.Codigo)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Disciplina d) => d.Nome)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Disciplina d) => d.Nivel)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Disciplina d) => d.CargaHoraria)
            </th>
            @if (isCoordenador)
            {
                <th  align="right"></th>
            }
        </tr>
    </thead>
    <tbody>
@foreach (var item in disciplinas) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Codigo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nivel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CargaHoraria)
            </td>
            @if (isCoordenador)
            {
                <td  align="right">
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            }
        </tr>
}
    </tbody>
</table>
